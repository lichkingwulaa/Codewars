"""
https://www.codewars.com/kata/which-x-for-that-sum/python
"""
def solve(m):
	return (2 * m + 1 - (4 * m + 1) ** 0.5) / (2 * m)

print(solve(8))
print(solve(2))
'''U = x + 2*x^2 + 3*x^3 + ... + n*x^n
   x*U = x^2 + 2*x^3 + 3*x^4 + ... + (n-1)*x^n + n*x^(n+1)
   (1-x)*U = x + x^2 + x^3 + ... + x^n - n*x^(n+1)
            x*(1-x^n)
   (1-x)*U = ---------  -  n*x^(n+1)
               1-x
       x*(1-x^n)      n*x^(n+1)   x - x^(n+1) - n*x^(n+1) + n*x^(n+2)
   U = ---------  -  ---------- = ----------------------------------- =
        (1-x)^2         1-x                   (1-x)^2
     x - (n+1)*x^(n+1) + n*x^(n+2)                             x
   = ----------------------------- = (n goes to infinity) = -------
               (1-x)^2                                      (1-x)^2
      x
   ------- -> m, then x = m*(1-x)^2 = m - 2*m*x + m*x^2
   (1-x)^2
   m*x^2 - (2*m + 1)*x + m = 0
   D = (-2*m - 1)^2 - 4*m^2 = 4*m^2 +4*m + 1 - 4*m^2 = 4*m + 1
            -(-2*m - 1) + (4*m + 1)^0.5  -(-2*m - 1) - (4*m + 1)^0.5
   x1, x2 = ---------------------------, ---------------------------
                       2*m                          2*m
                                                        2*m + 1 - (4*m + 1)^0.5
   x1 is always greater than 1 or equals to 1, then x = -----------------------
                                                                 2*m'''